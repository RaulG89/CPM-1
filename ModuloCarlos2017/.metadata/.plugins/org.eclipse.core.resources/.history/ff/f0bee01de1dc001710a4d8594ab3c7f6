package igu;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

//import logica.Catalogo;
import java.awt.CardLayout;
//import java.awt.Container;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.GridLayout;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import java.awt.FlowLayout;
import javax.swing.JComboBox;
import javax.swing.SwingConstants;
import java.awt.SystemColor;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JDayChooser;

public class Vprincipal2 extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel pnTitulo;
	private JPanel panel;
	private JPanel Titulo;
	private JLabel lblTitulo;
	// private RedimensionarImagen lblImagen;
	private JLabel lblImagen;
	private JButton btnCesta;
	private JPanel pnAyuda;
	private JPanel pnCarrito;
	private JPanel pnPrincipal;
	private JPanel pnFiltros;
	private JPanel pnBuscar;
	private JPanel pnFechas;
	private JPanel pnPersonas;
	private JPanel pnPais;
	private JPanel pnTipo;
	private JPanel pnLlegada;
	private JPanel pnSalida;
	private JLabel lblLlegada;
	private JDateChooser dcLlegada;
	private JLabel lblSalida;
	private JDayChooser dcSalida;


	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vprincipal2 frame = new Vprincipal2();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Vprincipal2() {
		/* Catalogo catalogo = new Catalogo(); */
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 832, 648);
		contentPane = new JPanel();
		contentPane.setBackground(SystemColor.window);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		contentPane.add(getPnTitulo(), BorderLayout.NORTH);
		contentPane.add(getPnPrincipal(), BorderLayout.SOUTH);

	}

	private JPanel getPnTitulo() {
		if (pnTitulo == null) {
			pnTitulo = new JPanel();
			pnTitulo.setLayout(new BorderLayout(0, 0));
			pnTitulo.add(getPanel(), BorderLayout.CENTER);
			pnTitulo.add(getTitulo(), BorderLayout.SOUTH);
		}
		return pnTitulo;
	}

	private JPanel getPanel() {
		if (panel == null) {
			panel = new JPanel();
			panel.setLayout(new GridLayout(0, 2, 0, 0));
			panel.add(getPnAyuda());
			panel.add(getPnCarrito());
		}
		return panel;
	}

	private JPanel getTitulo() {
		if (Titulo == null) {
			Titulo = new JPanel();
			FlowLayout flowLayout = (FlowLayout) Titulo.getLayout();
			flowLayout.setAlignment(FlowLayout.LEFT);
			Titulo.add(getLblTitulo());
		}
		return Titulo;
	}

	private JLabel getLblTitulo() {
		if (lblTitulo == null) {
			lblTitulo = new JLabel("TRAVEL PARK");
			lblTitulo.setFont(new Font("Hobo Std", Font.BOLD, 44));
		}
		return lblTitulo;
	}

	private JLabel getLblImagen() {
		if (lblImagen == null) {
			lblImagen = new JLabel("");
			lblImagen.setHorizontalAlignment(SwingConstants.CENTER);
			lblImagen.setHorizontalTextPosition(SwingConstants.CENTER);
			lblImagen.setIcon(new ImageIcon(Vprincipal2.class.getResource("/img/earth-globe-16807770.jpg")));
		}
		return lblImagen;
	}

	private JButton getBtnCesta() {
		if (btnCesta == null) {
			btnCesta = new JButton("");
			btnCesta.setBounds(0, 0, 20, 20);
			btnCesta.setIcon(new ImageIcon(Vprincipal2.class.getResource("/img/carrito.png")));
		}
		return btnCesta;
	}

	private JPanel getPnAyuda() {
		if (pnAyuda == null) {
			pnAyuda = new JPanel();
			pnAyuda.setLayout(new BorderLayout(0, 0));
			pnAyuda.add(getLblImagen(), BorderLayout.WEST);
		}
		return pnAyuda;
	}

	private JPanel getPnCarrito() {
		if (pnCarrito == null) {
			pnCarrito = new JPanel();
			pnCarrito.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
			pnCarrito.add(getBtnCesta());
		}
		return pnCarrito;
	}

	private String[] calculaFechas(String tipo) {
		int tope = 0;
		ArrayList<String> lista = new ArrayList<String>();

		switch (tipo) {
		case "dia":
			tope = 31;
			break;

		case "mes":
			tope = 12;
			break;

		case "año":
			tope = 20;
			break;

		case "personas":
			tope = 100;
			break;

		default:
			break;
		}
		if (tipo != "año") {
			for (int i = 0; i < tope; i++) {
				lista.add("" + (i + 1));
			}
		} else {
			for (int i = 0; i < tope; i++) {
				lista.add("" + (i + 2017));
			}
		}
		if (tipo != "personas") {
			for (int i = 0; i < tope; i++) {
				lista.add("" + (i + 1));
			}
		}

		String[] salida = new String[lista.size()];
		salida = lista.toArray(salida);
		return salida;
	}

	private String[] calculaDias(int tope) {
		ArrayList<String> lista = new ArrayList<String>();

		for (int i = 0; i < tope; i++) {
			lista.add("" + (i + 1));
		}
		String[] salida = new String[lista.size()];
		salida = lista.toArray(salida);
		return salida;
	}

	private JPanel getPnPrincipal() {
		if (pnPrincipal == null) {
			pnPrincipal = new JPanel();
			pnPrincipal.setLayout(new BorderLayout(0, 0));
			pnPrincipal.add(getPnFiltros(), BorderLayout.NORTH);
			pnPrincipal.add(getPnBuscar(), BorderLayout.SOUTH);
		}
		return pnPrincipal;
	}
	private JPanel getPnFiltros() {
		if (pnFiltros == null) {
			pnFiltros = new JPanel();
			pnFiltros.setLayout(new GridLayout(0, 1, 0, 0));
			pnFiltros.add(getPnFechas());
			pnFiltros.add(getPnPersonas());
			pnFiltros.add(getPnPais());
			pnFiltros.add(getPnTipo());
		}
		return pnFiltros;
	}
	private JPanel getPnBuscar() {
		if (pnBuscar == null) {
			pnBuscar = new JPanel();
		}
		return pnBuscar;
	}
	private JPanel getPnFechas() {
		if (pnFechas == null) {
			pnFechas = new JPanel();
			pnFechas.setLayout(new GridLayout(0, 2, 0, 0));
			pnFechas.add(getPnLlegada());
			pnFechas.add(getPnSalida());
		}
		return pnFechas;
	}
	private JPanel getPnPersonas() {
		if (pnPersonas == null) {
			pnPersonas = new JPanel();
		}
		return pnPersonas;
	}
	private JPanel getPnPais() {
		if (pnPais == null) {
			pnPais = new JPanel();
		}
		return pnPais;
	}
	private JPanel getPnTipo() {
		if (pnTipo == null) {
			pnTipo = new JPanel();
		}
		return pnTipo;
	}
	private JPanel getPnLlegada() {
		if (pnLlegada == null) {
			pnLlegada = new JPanel();
			pnLlegada.add(getLblLlegada());
			pnLlegada.add(getDcLlegada());
		}
		return pnLlegada;
	}
	private JPanel getPnSalida() {
		if (pnSalida == null) {
			pnSalida = new JPanel();
			pnSalida.add(getLblSalida());
			pnSalida.add(getDcSalida());
		}
		return pnSalida;
	}
	private JLabel getLblLlegada() {
		if (lblLlegada == null) {
			lblLlegada = new JLabel("Llegada:");
		}
		return lblLlegada;
	}
	private JDateChooser getDcLlegada() {
		if (dcLlegada == null) {
			dcLlegada = new JDateChooser();
		}
		return dcLlegada;
	}
	private JLabel getLblSalida() {
		if (lblSalida == null) {
			lblSalida = new JLabel("Salida:");
		}
		return lblSalida;
	}
	private JDayChooser getDcSalida() {
		if (dcSalida == null) {
			dcSalida = new JDayChooser();
		}
		return dcSalida;
	}
}