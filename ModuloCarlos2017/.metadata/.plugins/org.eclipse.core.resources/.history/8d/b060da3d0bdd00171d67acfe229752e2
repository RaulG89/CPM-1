package igu;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

//import java.awt.Container;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import java.awt.GridLayout;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import java.awt.FlowLayout;
import javax.swing.JComboBox;
import javax.swing.SwingConstants;
import java.awt.SystemColor;
import javax.swing.JRadioButton;
import com.toedter.calendar.JDateChooser;

public class Vprincipal2 extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JPanel pnTitulo;
	private JPanel panel;
	private JPanel Titulo;
	private JLabel lblTitulo;
	// private RedimensionarImagen lblImagen;
	private JLabel lblImagen;
	private JButton btnCesta;
	private JPanel pnAyuda;
	private JPanel pnCarrito;
	private JPanel pnPrincipal;
	private JPanel pnFiltros;
	private JPanel pnBuscar;
	private JPanel pnFechas;
	private JPanel pnPersonas;
	private JPanel pnPais;
	private JPanel pnLlegada;
	private JPanel pnSalida;
	private JLabel lblLlegada;
	private JLabel lblSalida;
	private JDateChooser dcLlegada;
	private JDateChooser dcSalida;
	private JLabel lblPersonas;
	private JComboBox<String> cbPersonas;
	private JLabel lblPais;
	private JComboBox<String> cbPais;
	private JPanel panel_2;
	private JLabel label;
	private JPanel panel_5;
	private JRadioButton radioButton;
	private JPanel panel_6;
	private JRadioButton radioButton_1;
	private JPanel panel_7;
	private JRadioButton radioButton_2;
	private JButton btnNewButton;



	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Vprincipal2 frame = new Vprincipal2();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Vprincipal2() {
		setResizable(false);
		/* Catalogo catalogo = new Catalogo(); */
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 832, 648);
		contentPane = new JPanel();
		contentPane.setBackground(SystemColor.window);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		contentPane.add(getPnTitulo(), BorderLayout.NORTH);
		contentPane.add(getPnPrincipal(), BorderLayout.CENTER);

	}

	private JPanel getPnTitulo() {
		if (pnTitulo == null) {
			pnTitulo = new JPanel();
			pnTitulo.setLayout(new BorderLayout(0, 0));
			pnTitulo.add(getPanel(), BorderLayout.CENTER);
			pnTitulo.add(getTitulo(), BorderLayout.SOUTH);
		}
		return pnTitulo;
	}

	private JPanel getPanel() {
		if (panel == null) {
			panel = new JPanel();
			panel.setLayout(new GridLayout(0, 2, 0, 0));
			panel.add(getPnAyuda());
			panel.add(getPnCarrito());
		}
		return panel;
	}

	private JPanel getTitulo() {
		if (Titulo == null) {
			Titulo = new JPanel();
			FlowLayout flowLayout = (FlowLayout) Titulo.getLayout();
			flowLayout.setAlignment(FlowLayout.LEFT);
			Titulo.add(getLblTitulo());
		}
		return Titulo;
	}

	private JLabel getLblTitulo() {
		if (lblTitulo == null) {
			lblTitulo = new JLabel("TRAVEL PARK");
			lblTitulo.setFont(new Font("Hobo Std", Font.BOLD, 44));
		}
		return lblTitulo;
	}

	private JLabel getLblImagen() {
		if (lblImagen == null) {
			lblImagen = new JLabel("");
			lblImagen.setHorizontalAlignment(SwingConstants.CENTER);
			lblImagen.setHorizontalTextPosition(SwingConstants.CENTER);
			lblImagen.setIcon(new ImageIcon(Vprincipal2.class.getResource("/img/earth-globe-16807770.jpg")));
		}
		return lblImagen;
	}

	private JButton getBtnCesta() {
		if (btnCesta == null) {
			btnCesta = new JButton("");
			btnCesta.setBounds(0, 0, 20, 20);
			btnCesta.setIcon(new ImageIcon(Vprincipal2.class.getResource("/img/carrito.png")));
		}
		return btnCesta;
	}

	private JPanel getPnAyuda() {
		if (pnAyuda == null) {
			pnAyuda = new JPanel();
			pnAyuda.setLayout(new BorderLayout(0, 0));
			pnAyuda.add(getLblImagen(), BorderLayout.WEST);
		}
		return pnAyuda;
	}

	private JPanel getPnCarrito() {
		if (pnCarrito == null) {
			pnCarrito = new JPanel();
			pnCarrito.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
			pnCarrito.add(getBtnCesta());
		}
		return pnCarrito;
	}

	private String[] calculaListas(String tipo) {
		int tope = 0;
		ArrayList<String> lista = new ArrayList<String>();

		switch (tipo) {
		
		case "personas":
			tope = 100;
			break;

		default:
			break;
		}

		if (tipo == "personas") {
			for (int i = 0; i < tope; i++) {
				lista.add("" + (i + 1));
			}
		}

		String[] salida = new String[lista.size()];
		salida = lista.toArray(salida);
		return salida;
	}

	private JPanel getPnPrincipal() {
		if (pnPrincipal == null) {
			pnPrincipal = new JPanel();
			pnPrincipal.setLayout(new BorderLayout(0, 0));
			pnPrincipal.add(getPnFiltros(), BorderLayout.NORTH);
			pnPrincipal.add(getPnBuscar(), BorderLayout.SOUTH);
		}
		return pnPrincipal;
	}
	private JPanel getPnFiltros() {
		if (pnFiltros == null) {
			pnFiltros = new JPanel();
			pnFiltros.setLayout(new GridLayout(0, 1, 0, 0));
			pnFiltros.add(getPnFechas());
			pnFiltros.add(getPnPersonas());
			pnFiltros.add(getPnPais());
			pnFiltros.add(getPanel_2());
			pnFiltros.add(getPanel_5());
			pnFiltros.add(getPanel_6());
			pnFiltros.add(getPanel_7());
		}
		return pnFiltros;
	}
	private JPanel getPnBuscar() {
		if (pnBuscar == null) {
			pnBuscar = new JPanel();
			pnBuscar.add(getBtnNewButton());
		}
		return pnBuscar;
	}
	private JPanel getPnFechas() {
		if (pnFechas == null) {
			pnFechas = new JPanel();
			pnFechas.setLayout(new GridLayout(0, 2, 0, 0));
			pnFechas.add(getPnLlegada());
			pnFechas.add(getPnSalida());
		}
		return pnFechas;
	}
	private JPanel getPnPersonas() {
		if (pnPersonas == null) {
			pnPersonas = new JPanel();
			pnPersonas.add(getLblPersonas());
			pnPersonas.add(getCbPersonas());
		}
		return pnPersonas;
	}
	private JPanel getPnPais() {
		if (pnPais == null) {
			pnPais = new JPanel();
			pnPais.add(getLblPais());
			pnPais.add(getCbPais());
		}
		return pnPais;
	}
	private JPanel getPnLlegada() {
		if (pnLlegada == null) {
			pnLlegada = new JPanel();
			pnLlegada.add(getLblLlegada());
			pnLlegada.add(getDcLlegada());
		}
		return pnLlegada;
	}
	private JPanel getPnSalida() {
		if (pnSalida == null) {
			pnSalida = new JPanel();
			pnSalida.add(getLblSalida());
			pnSalida.add(getDcSalida());

		}
		return pnSalida;
	}
	private JLabel getLblLlegada() {
		if (lblLlegada == null) {
			lblLlegada = new JLabel("Llegada:");
		}
		return lblLlegada;
	}
	private JLabel getLblSalida() {
		if (lblSalida == null) {
			lblSalida = new JLabel("Salida:");
		}
		return lblSalida;
	}
	private JDateChooser getDcLlegada() {
		if (dcLlegada == null) {
			dcLlegada = new JDateChooser();
		}
		return dcLlegada;
	}
	private JDateChooser getDcSalida() {
		if (dcSalida == null) {
			dcSalida = new JDateChooser();
		}
		return dcSalida;
	}
	private JLabel getLblPersonas() {
		if (lblPersonas == null) {
			lblPersonas = new JLabel("Nº de Personas:");
		}
		return lblPersonas;
	}
	private JComboBox<String> getCbPersonas() {
		if (cbPersonas == null) {
			cbPersonas = new JComboBox<String>();
			cbPersonas.setModel(new DefaultComboBoxModel<String>(calculaListas("personas")));
		}
		return cbPersonas;
	}
	private JLabel getLblPais() {
		if (lblPais == null) {
			lblPais = new JLabel("Pais:");
		}
		return lblPais;
	}
	private JComboBox<String> getCbPais() {
		if (cbPais == null) {
			cbPais = new JComboBox<String>();
			cbPais.setModel(new DefaultComboBoxModel<String>(new String[] {"Seleccione un pais","Afganistán", "Akrotiri", "Albania", "Alemania", "Andorra", "Angola", "Anguila", "Antártida", "Antigua y Barbuda", "Antillas Neerlandesas", "Arabia Saudí", "Arctic Ocean", "Argelia", "Argentina", "Armenia", "Aruba", "Atlantic Ocean", "Australia", "Austria", "Azerbaiyán", "Bahamas", "Bahráin", "Bangladesh", "Barbados", "Bélgica", "Belice", "Benín", "Bermudas", "Bielorrusia", "Birmania; Myanmar", "Bolivia", "Bosnia y Hercegovina", "Botsuana", "Brasil", "Brunéi", "Bulgaria", "Burkina Faso", "Burundi", "Bután", "Cabo Verde", "Camboya", "Camerún", "Canadá", "Chad", "Chile", "China", "Chipre", "Clipperton Island", "Colombia", "Comoras", "Congo", "Coral Sea Islands", "Corea del Norte", "Corea del Sur", "Costa de Marfil", "Costa Rica", "Croacia", "Cuba", "Dhekelia", "Dinamarca", "Dominica", "Ecuador", "Egipto", "El Salvador", "El Vaticano", "Emiratos Árabes Unidos", "Eritrea", "Eslovaquia", "Eslovenia", "España", "Estados Unidos", "Estonia", "Etiopía", "Filipinas", "Finlandia", "Fiyi", "Francia", "Gabón", "Gambia", "Gaza Strip", "Georgia", "Ghana", "Gibraltar", "Granada", "Grecia", "Groenlandia", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea Ecuatorial", "Guinea-Bissau", "Guyana", "Haití", "Honduras", "Hong Kong", "Hungría", "India", "Indian Ocean", "Indonesia", "Irán", "Iraq", "Irlanda", "Isla Bouvet", "Isla Christmas", "Isla Norfolk", "Islandia", "Islas Caimán", "Islas Cocos", "Islas Cook", "Islas Feroe", "Islas Heard y McDonald", "Islas Malvinas", "Islas Marianas del Norte", "Islas Marshall", "Islas Pitcairn", "Islas Salomón", "Islas Turcas y Caicos", "Islas Vírgenes Americanas", "Islas Vírgenes Británicas", "Israel", "Italia", "Jamaica", "Jan Mayen", "Japón", "Jersey", "Jordania", "Kazajistán", "Kenia", "Kirguizistán", "Kiribati", "Kuwait", "Laos", "Lesoto", "Letonia", "Líbano", "Liberia", "Libia", "Liechtenstein", "Lituania", "Luxemburgo", "Macao", "Macedonia", "Madagascar", "Malasia", "Malaui", "Maldivas", "Malí", "Malta", "Man, Isle of", "Marruecos", "Mauricio", "Mauritania", "Mayotte", "México", "Micronesia", "Moldavia", "Mónaco", "Mongolia", "Montenegro", "Montserrat", "Mozambique", "Mundo", "Namibia", "Nauru", "Navassa Island", "Nepal", "Nicaragua", "Níger", "Nigeria", "Niue", "Noruega", "Nueva Caledonia", "Nueva Zelanda", "Omán", "Pacific Ocean", "Países Bajos", "Pakistán", "Palaos", "Panamá", "Papúa-Nueva Guinea", "Paracel Islands", "Paraguay", "Perú", "Polinesia Francesa", "Polonia", "Portugal", "Puerto Rico", "Qatar", "Reino Unido", "República Centroafricana", "República Checa", "República del Congo", "República Dominicana", "Ruanda", "Rumania", "Rusia", "Sáhara Occidental", "Samoa", "Samoa Americana", "San Cristóbal y Nieves", "San Marino", "San Pedro y Miquelón", "San Vicente y las Granadinas", "Santa Helena", "Santa Lucía", "Santo Tomé y Príncipe", "Senegal", "Serbia", "Seychelles", "Sierra Leona", "Singapur", "Siria", "Somalia", "Southern Ocean", "Spratly Islands", "Sri Lanka", "Suazilandia", "Sudáfrica", "Sudán", "Suecia", "Suiza", "Surinam", "Svalbard y Jan Mayen", "Tailandia", "Taiwán", "Tanzania", "Tayikistán", "Timor Oriental", "Togo", "Tokelau", "Tonga", "Trinidad y Tobago", "Túnez", "Turkmenistán", "Turquía", "Tuvalu", "Ucrania", "Uganda", "Unión Europea", "Uruguay", "Uzbekistán", "Vanuatu", "Venezuela", "Vietnam", "Wake Island", "Wallis y Futuna", "West Bank", "Yemen", "Yibuti", "Zambia", "Zimbabue"}));
		}
		return cbPais;
	}
	private JPanel getPanel_2() {
		if (panel_2 == null) {
			panel_2 = new JPanel();
			panel_2.add(getLabel());
		}
		return panel_2;
	}
	private JLabel getLabel() {
		if (label == null) {
			label = new JLabel("Seleccione el tipo de paquete vacacional que está buscando");
		}
		return label;
	}
	private JPanel getPanel_5() {
		if (panel_5 == null) {
			panel_5 = new JPanel();
			panel_5.add(getRadioButton());
		}
		return panel_5;
	}
	private JRadioButton getRadioButton() {
		if (radioButton == null) {
			radioButton = new JRadioButton("Alojamiento             ");
		}
		return radioButton;
	}
	private JPanel getPanel_6() {
		if (panel_6 == null) {
			panel_6 = new JPanel();
			panel_6.add(getRadioButton_1());
		}
		return panel_6;
	}
	private JRadioButton getRadioButton_1() {
		if (radioButton_1 == null) {
			radioButton_1 = new JRadioButton("Parque                     ");
		}
		return radioButton_1;
	}
	private JPanel getPanel_7() {
		if (panel_7 == null) {
			panel_7 = new JPanel();
			panel_7.add(getRadioButton_2());
		}
		return panel_7;
	}
	private JRadioButton getRadioButton_2() {
		if (radioButton_2 == null) {
			radioButton_2 = new JRadioButton("Alojamiento+Parque");
		}
		return radioButton_2;
	}
	private JButton getBtnNewButton() {
		if (btnNewButton == null) {
			btnNewButton = new JButton("Buscar");
		}
		return btnNewButton;
	}
	
	private void comprobarFecha(){
		if(dcLlegada.getDate().before(dcSalida.getDate())){
			
		}else{
			dcSalida.
		}
	}
}